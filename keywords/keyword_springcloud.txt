1.cloud生态列表
SpringCloud：
eureka + springcloudloadbalancer + hystrix + gateway/zuul + springconfig
springcloudalibaba
nacos + dubbo + sentinel + nginx/gateway，此外，分布式事务seata也是ali的项目

2.微服务发展史
单体
门户系统：网页
后台：后台管理系统
热点问题、模块耦合高、扩展性差（新增资源分配粒度粗，技术栈受限）、不易维护

水平架构：集群模式 提高了可用性，一定程度上提高了并发能力
垂直架构：应用部署到不同的服务器，针对服务器水平扩展的时候扩展的粒度更细（子系统），解决了热点问题、扩展问题、耦合问题、维护问题

3.正向代理、反向代理的区别
正向代理，代理对象是client
反向代理，代理对象是server

4.分布式系统的cap原则
c:一致性，在整个系统在同一时刻拿到数据是一样的
a:可用性，非故障节点都能拿到响应，服务熔断也是实现了可用性
p:分区容错性，分区存储的网络节点无法连通，如丢包
AC方案: 数据更新后立刻通知其他节点,但是分区总是有可能网络不连通,本质上是不可能的
CP方案: 数据更新通知其他节点完成后才能进行响应(强一致性),一旦出现网络问题用户体验就很差
AP方案: 放弃一致性, 使用最终一致性替代
eureka是AP方案,zk是CP方案,nacos默认ap
redis等数据库追求强一致性要使用cp方案

5.nacos四大功能
1.服务发现和服务健康监测
2.动态配置服务
3.动态DNS服务
4.服务及其元数据管理

6.Cloud Bus消息总线

7.RabbitMQ工作模式

8.BASE定理
基本可用、软状态、最终一致性